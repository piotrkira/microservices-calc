// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package endpoints

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Numbers struct {
	A                    int64    `protobuf:"varint,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    int64    `protobuf:"varint,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Numbers) Reset()         { *m = Numbers{} }
func (m *Numbers) String() string { return proto.CompactTextString(m) }
func (*Numbers) ProtoMessage()    {}
func (*Numbers) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Numbers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Numbers.Unmarshal(m, b)
}
func (m *Numbers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Numbers.Marshal(b, m, deterministic)
}
func (m *Numbers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Numbers.Merge(m, src)
}
func (m *Numbers) XXX_Size() int {
	return xxx_messageInfo_Numbers.Size(m)
}
func (m *Numbers) XXX_DiscardUnknown() {
	xxx_messageInfo_Numbers.DiscardUnknown(m)
}

var xxx_messageInfo_Numbers proto.InternalMessageInfo

func (m *Numbers) GetA() int64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *Numbers) GetB() int64 {
	if m != nil {
		return m.B
	}
	return 0
}

type Result struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*Numbers)(nil), "endpoints.Numbers")
	proto.RegisterType((*Result)(nil), "endpoints.Result")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0xcd, 0x4b, 0x29, 0xc8,
	0xcf, 0xcc, 0x2b, 0x29, 0x56, 0x52, 0xe5, 0x62, 0xf7, 0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0x2a, 0x16,
	0xe2, 0xe1, 0x62, 0x4c, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x62, 0x4c, 0x04, 0xf1, 0x92,
	0x24, 0x98, 0x20, 0xbc, 0x24, 0x25, 0x25, 0x2e, 0xb6, 0xa0, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0x21,
	0x09, 0x2e, 0xf6, 0xe4, 0xfc, 0xbc, 0x92, 0xd4, 0xbc, 0x12, 0xb0, 0x5a, 0xce, 0x20, 0x18, 0xd7,
	0x28, 0x83, 0x8b, 0xcd, 0xb7, 0x34, 0xc7, 0x25, 0xb3, 0x4c, 0x48, 0x8f, 0x8b, 0xd9, 0xb7, 0x34,
	0x47, 0x48, 0x48, 0x0f, 0x6e, 0x8f, 0x1e, 0xd4, 0x12, 0x29, 0x41, 0x24, 0x31, 0x88, 0x89, 0x4a,
	0x0c, 0x20, 0xf5, 0x20, 0x6d, 0xc4, 0xaa, 0x4f, 0x62, 0x03, 0x7b, 0xc3, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x7c, 0x74, 0x42, 0x65, 0xd7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MulDivClient is the client API for MulDiv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MulDivClient interface {
	Mul(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Result, error)
	Div(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Result, error)
}

type mulDivClient struct {
	cc grpc.ClientConnInterface
}

func NewMulDivClient(cc grpc.ClientConnInterface) MulDivClient {
	return &mulDivClient{cc}
}

func (c *mulDivClient) Mul(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/endpoints.MulDiv/Mul", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mulDivClient) Div(ctx context.Context, in *Numbers, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/endpoints.MulDiv/Div", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MulDivServer is the server API for MulDiv service.
type MulDivServer interface {
	Mul(context.Context, *Numbers) (*Result, error)
	Div(context.Context, *Numbers) (*Result, error)
}

// UnimplementedMulDivServer can be embedded to have forward compatible implementations.
type UnimplementedMulDivServer struct {
}

func (*UnimplementedMulDivServer) Mul(ctx context.Context, req *Numbers) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mul not implemented")
}
func (*UnimplementedMulDivServer) Div(ctx context.Context, req *Numbers) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Div not implemented")
}

func RegisterMulDivServer(s *grpc.Server, srv MulDivServer) {
	s.RegisterService(&_MulDiv_serviceDesc, srv)
}

func _MulDiv_Mul_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Numbers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MulDivServer).Mul(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/endpoints.MulDiv/Mul",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MulDivServer).Mul(ctx, req.(*Numbers))
	}
	return interceptor(ctx, in, info, handler)
}

func _MulDiv_Div_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Numbers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MulDivServer).Div(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/endpoints.MulDiv/Div",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MulDivServer).Div(ctx, req.(*Numbers))
	}
	return interceptor(ctx, in, info, handler)
}

var _MulDiv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "endpoints.MulDiv",
	HandlerType: (*MulDivServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mul",
			Handler:    _MulDiv_Mul_Handler,
		},
		{
			MethodName: "Div",
			Handler:    _MulDiv_Div_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
